{"version":3,"sources":["App.js","index.js"],"names":["itemsFromBackend","id","uuid","content","columnsFromBackend","_columnsFromBackend","_defineProperty","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","_objectSpread2","sourceColumn","destColumn","sourceItems","_toConsumableArray","destItems","_sourceItems$splice","splice","index","removed","_slicedToArray","_objectSpread","column","copiedItems","_copiedItems$splice","App","_useState","useState","_useState2","_jsx","style","display","justifyContent","height","children","DragDropContext","Object","entries","map","_ref","_ref2","columnId","_jsxs","flexDirection","alignItems","margin","Droppable","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","item","Draggable","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","placeholder","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.741ba1f4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\n\nconst itemsFromBackend = [\n  { id: uuid(), content: \"First task\" },\n  { id: uuid(), content: \"Second task\" },\n  { id: uuid(), content: \"Third task\" },\n  { id: uuid(), content: \"Fourth task\" },\n  { id: uuid(), content: \"Fifth task\" }\n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Requested\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"In Progress\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Done\",\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n              <div style={{ margin: 8 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"lightgrey\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 500\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#263B4A\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style\n                                    }}\n                                  >\n                                    {item.content}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}